import matplotlib.pyplot as plt
import numpy as np
from matplotlib import rcParams

rcParams['font.size'] = 30

# 参数量和性能数据（示例数据，你需要替换为你的实际数据）
parameters = [50, 100, 200, 400, 800, 1600]
xticks = np.arange(1, 1.3 * len(parameters)+1, 1.3)
# rf_ts8 = np.array([97.54470243,97.57139045,97.55804644,97.46463838,97.59807846,97.58473445]) / 100
# df_ts8 = np.array([98.1318388,98.30531092,98.38537497,98.438751,98.50547104,98.38537497]) / 100
# rf_ts16 = np.array([98.99919936,99.0659194,98.99919936,99.02588738,99.03923139,99.09260742]) / 100
# df_ts16 = np.array([99.31945556,99.39951962,99.34614358,99.35948759,99.39951962,99.43955164]) / 100
# rf_ts32 = np.array([99.26607953,99.27942354,99.27942354,99.30611156,99.27942354,99.25273552]) / 100
# df_ts32 = np.array([99.47958367,99.51961569,99.35948759,99.45289565,99.46623966,99.47958367]) / 100

rf_ts8 = np.array([89.14304124,89.23969072,89.4007732,89.14304124,88.94974227,89.14304124]) / 100
df_ts8 = np.array([90.33505155,89.94845361,90.46391753,89.9806701,90.20618557,90.30283505]) / 100
rf_ts16 = np.array([90.39948454,90.68943299,90.81829897,90.72164948,90.81829897,90.78608247]) / 100
df_ts16 = np.array([90.97938144,91.10824742,91.2693299,91.52706186,91.78479381,91.75257732]) / 100
rf_ts32 = np.array([90.75386598,91.01159794,91.01159794,91.04381443,90.97938144,91.10824742]) / 100
df_ts32 = np.array([91.10824742,91.81701031,91.65592784,91.65592784,91.68814433,91.81701031]) / 100

# rf_ts8 = np.array([95.72748268,95.90069284,95.84295612,95.95842956,95.90069284,95.90069284]) / 100
# df_ts8 = np.array([96.47806005,96.42032333,96.36258661,96.36258661,96.53579677,96.30484988]) / 100
# rf_ts16 = np.array([96.82448037,97.40184758,97.28637413,97.22863741,97.11316397,97.17090069]) / 100
# df_ts16 = np.array([97.17090069,97.80600462,97.4595843,97.4595843,97.4595843,97.51732102]) / 100
# rf_ts32 = np.array([97.11316397,97.51732102,97.22863741,97.40184758,97.34411085,97.28637413]) / 100
# df_ts32 = np.array([97.4595843,97.7482679,97.34411085,97.4595843,97.51732102,97.69053118]) / 100


# 绘制成对的条形图
plt.figure(figsize=(12, 8))
plt.subplots_adjust(top=0.99,left=0.13, right=0.99)
plt.bar(xticks-0.5, rf_ts8, width=0.12, label='RF (8)', color='#348ABD', edgecolor='black', hatch='/')
plt.bar(xticks-0.3, df_ts8, width=0.12, label='DF (8)', color='#E24A33', edgecolor='black', hatch='/')
plt.bar(xticks-0.1, rf_ts16, width=0.12, label='RF (16)', color='#348ABD', edgecolor='black', hatch='..')
plt.bar(xticks+0.1, df_ts16, width=0.12, label='DF (16)', color='#E24A33', edgecolor='black', hatch='..')
plt.bar(xticks+0.3, rf_ts32, width=0.12, label='RF (32)', color='#348ABD', edgecolor='black', hatch='o')
plt.bar(xticks+0.5, df_ts32, width=0.12, label='DF (32)', color='#E24A33', edgecolor='black', hatch='o')

# 设置图形属性
plt.xlabel('Number of Trees')
plt.ylabel('Test Accuracy')
# plt.title('xxx')
plt.xticks(xticks,['50','100','200','400','800','1600'])
plt.yticks([0.89,0.90,0.91,0.92])
# plt.yticks([0.95, 0.96, 0.97, 0.98, 0.99,1.00])
# plt.ylim(0.97, 1.001)
plt.ylim(0.886, 0.926)
# plt.ylim(0.95, 0.984)
plt.legend(fontsize=24, ncol=3, labelspacing=0.4, columnspacing=0.4)

# 显示图形
plt.show()
